npm init -y
npm install typescript
npx tsc index.ts // transpilar o codigo para JS
npx tsc --init

{
  "compilerOptions": {
      "target": "es5",
      "noEmitOnError": true,
      "esModuleInterop": true,
      "forceConsistentCasingInFileNames": true,
      "strict": true,
      "skipLibCheck": true,
      "outDir": "./dist"
  }
  // "include": ["./src/**/*"],
  // "exclude": ["./src/teste.ts"]
}

{
    "compilerOptions": {
        "outDir": "./dist",
        "target": "es2020",
        // "alwaysStrict": true
        // "skipLibCheck": true,
        "strictNullChecks": true,
        "strictPropertyInitialization": true
        // "noEmitOnError": true
    },
    "include": ["./src/**/*"]
}

----------------------

yarn init -y
yarn add typescript -D
yarn tsc index.ts // transpilar o codigo para JS
yarn tsc --init
yarn tsc

{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */
    "target": "ES2021",                                /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */
    "module": "commonjs",                           /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "outDir": "./dist",                              /* Redirect output structure to the directory. */
    "rootDir": "./src",                             /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    "strict": true,                                 /* Enable all strict type-checking options. */
    "esModuleInterop": true,                        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "skipLibCheck": true,                           /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true        /* Disallow inconsistently-cased references to the same file. */
  }
}

------------------------------

yarn add typescript -D ts-node-dev @types/node
yarn ts-node-dev --respawn ./src/main.ts
yarn add express